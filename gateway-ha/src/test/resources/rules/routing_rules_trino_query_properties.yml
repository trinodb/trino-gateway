---
name: "user"
description: "if user is will, route to will-group"
condition: "trinoRequestUser.userExistsAndEquals(\"will\")"
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"will-group\")"
---
name: "query"
description: "test extraction of tables and schemas in conjunction with default catalog and schema"
condition: |
  trinoQueryProperties.tablesContains("cat_default.\"schem_\\\"default\".tblz")
  && trinoQueryProperties.tablesContains("cat_default.schemy.tbly")
  && trinoQueryProperties.tablesContains("catx.schemx.tblx")
  && trinoQueryProperties.getSchemas().contains("schemy")
  && trinoQueryProperties.getCatalogs().contains("catx")
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"tbl-group\")"
---
name: "catalog-schema"
description: "test that catalogSchemas with default catalog and schema"
condition: |
  trinoQueryProperties.getCatalogSchemas.contains("catx.nondefault")
  && trinoQueryProperties.getCatalogSchemas.contains("caty.default")
  && !trinoQueryProperties.getCatalogSchemas.contains("catx.default")
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"catalog-schema-group\")"
---
name: "query-type"
description: "test table type"
condition: |
  trinoQueryProperties.getQueryType().toLowerCase.equals("insert")
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"type-group\")"
---
name: "resource-group-query-type"
description: "test table type"
condition: |
  trinoQueryProperties.getResourceGroupQueryType().equals("DATA_DEFINITION")
actions:
  - "result.put(\"routingGroup\", \"resource-group-type-group\")"
---
name: "prepared-statement-header"
description: "test execute with multiple prepared statements"
condition: |
  trinoQueryProperties.getQueryType().toLowerCase.equals("query") && trinoQueryProperties.tablesContains("cat.schem.foo")
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"statement-header-group\")"
---
name: "defaults-group"
description: "test default schema and catalog"
condition: |
  trinoQueryProperties.getDefaultCatalog().equals(java.util.Optional.of("other_catalog"))
  && trinoQueryProperties.getDefaultSchema().equals(java.util.Optional.of("other_schema"))

actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"defaults-group\")"
---
name: "system-group"
description: "capture queries to system catalog"
condition: |
  trinoQueryProperties.getCatalogs().contains("system")
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"system\")"

---
name: "nomatch"
priority: -1
description: "default group to catch if no other rules fired"
condition: "true"
actions:
  - "result.put(FileBasedRoutingGroupSelector.RESULTS_ROUTING_GROUP_KEY, \"no-match\")"

serverConfig:
  node.environment: test
  http-server.http.port: 8080
  http-server.https.enabled: true
  http-server.https.port: ${ENV:REQUEST_ROUTER_PORT}
  http-server.https.keystore.path: ${ENV:LOCALHOST_JKS}
  http-server.https.keystore.key: 123456

dataStore:
  jdbcUrl: ${ENV:POSTGRESQL_JDBC_URL}
  user: ${ENV:POSTGRESQL_USER}
  password: ${ENV:POSTGRESQL_PASSWORD}
  driver: org.postgresql.Driver

extraWhitelistPaths:
  - '/v1/custom.*'

authorization:
  admin: .*FOO.*
  user: .*BAR.*
  api: .*BAZ.*

presetUsers:
  foo@bar.com:
    privileges: FOO_BAR
  admin1:
    password: admin1_password
    privileges: FOO_BAR

authentication:
  defaultTypes: ["oauth", "form"]
  oauth:
    issuer: http://localhost:4444/
    clientId: trino_client_id
    clientSecret: trino_client_secret
    tokenEndpoint: http://localhost:4444/oauth2/token
    authorizationEndpoint: http://localhost:4444/oauth2/auth
    jwkEndpoint: http://localhost:4444/.well-known/jwks.json
    redirectUrl: https://localhost:${ENV:REQUEST_ROUTER_PORT}/oidc/callback
    redirectWebUrl: https://localhost:${ENV:REQUEST_ROUTER_PORT}/
    userIdField: sub
    scopes:
      - openid
  form:
    selfSignKeyPair:
      privateKeyRsa: src/test/resources/auth/test_private_key.pem
      publicKeyRsa: src/test/resources/auth/test_public_key.pem
